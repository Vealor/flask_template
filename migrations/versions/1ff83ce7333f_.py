"""empty message

Revision ID: 1ff83ce7333f
Revises: 
Create Date: 2019-08-16 11:43:19.425655

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1ff83ce7333f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklisted_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cdm_labels',
    sa.Column('script_label', sa.String(length=256), nullable=False),
    sa.Column('english_label', sa.String(length=256), nullable=False),
    sa.Column('is_calculated', sa.Boolean(), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('is_unique', sa.Boolean(), nullable=False),
    sa.Column('datatype', sa.Enum('dt_boolean', 'dt_date', 'dt_datetime', 'dt_varchar', 'dt_float', 'dt_int', 'dt_blob', name='datatype'), nullable=False),
    sa.Column('regex', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('script_label')
    )
    op.create_table('line_of_business',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('master_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('pickle', sa.PickleType(), nullable=False),
    sa.Column('hyper_p', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', name='activity'), server_default='pending', nullable=False),
    sa.Column('train_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('train_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('initials', sa.String(length=8), nullable=False),
    sa.Column('first_name', sa.String(length=128), nullable=False),
    sa.Column('last_name', sa.String(length=128), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('req_pass_reset', sa.Boolean(), server_default='t', nullable=False),
    sa.Column('role', sa.Enum('it_admin', 'tax_admin', 'data_admin', 'tax_approver', name='roles'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('initials')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('line_of_business_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['line_of_business_id'], ['line_of_business.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'line_of_business_id', name='client_unique_constraint')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('action', sa.Enum('create', 'delete', 'modify', 'approve', name='actions'), nullable=False),
    sa.Column('affected_entity', sa.String(length=256), nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('master_model_performances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('precision', sa.Float(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=False),
    sa.Column('recall', sa.Float(), nullable=False),
    sa.Column('test_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('test_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('master_model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['master_model_id'], ['master_models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paredown_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_core', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('line_of_business_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['line_of_business_id'], ['line_of_business.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sectors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('line_of_business_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['line_of_business_id'], ['line_of_business.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('client_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('pickle', sa.PickleType(), nullable=False),
    sa.Column('hyper_p', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', name='activity'), server_default='pending', nullable=False),
    sa.Column('train_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('train_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('is_approved', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('is_archived', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('juristiction', sa.Enum('ab', 'bc', 'mb', 'nb', 'nl', 'nt', 'ns', 'nu', 'on', 'pe', 'qc', 'sk', 'ty', 'foreign', name='juristiction'), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('client_model_performances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('precision', sa.Float(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=False),
    sa.Column('recall', sa.Float(), nullable=False),
    sa.Column('test_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('test_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('client_model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_model_id'], ['client_models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_mappings',
    sa.Column('column_name', sa.String(length=256), nullable=False),
    sa.Column('table_name', sa.String(length=256), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('cdm_label_script_label', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['cdm_label_script_label'], ['cdm_labels.script_label'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'cdm_label_script_label')
    )
    op.create_table('project_sector',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('sector_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sector_id'], ['sectors.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'sector_id')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_approved', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('is_predicted', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('recovery_probability', sa.Float(), nullable=True),
    sa.Column('rbc_predicted', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('rbc_recovery_probability', sa.Float(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('locked_user_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('client_model_id', sa.Integer(), nullable=True),
    sa.Column('master_model_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_model_id'], ['client_models.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['locked_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['master_model_id'], ['master_models.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_project',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('is_favourite', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'project_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_project')
    op.drop_table('transactions')
    op.drop_table('project_sector')
    op.drop_table('data_mappings')
    op.drop_table('client_model_performances')
    op.drop_table('projects')
    op.drop_table('client_models')
    op.drop_table('sectors')
    op.drop_table('paredown_rules')
    op.drop_table('master_model_performances')
    op.drop_table('logs')
    op.drop_table('clients')
    op.drop_table('vendors')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('master_models')
    op.drop_table('line_of_business')
    op.drop_table('cdm_labels')
    op.drop_table('blacklisted_tokens')
    # ### end Alembic commands ###
