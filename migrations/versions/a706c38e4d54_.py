"""empty message

Revision ID: a706c38e4d54
Revises: 
Create Date: 2019-08-27 15:03:17.963891

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a706c38e4d54'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('blacklisted_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=120), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cdm_labels',
    sa.Column('script_label', sa.String(length=256), nullable=False),
    sa.Column('english_label', sa.String(length=256), nullable=False),
    sa.Column('is_calculated', sa.Boolean(), nullable=False),
    sa.Column('is_required', sa.Boolean(), nullable=False),
    sa.Column('is_unique', sa.Boolean(), nullable=False),
    sa.Column('datatype', sa.Enum('dt_boolean', 'dt_date', 'dt_datetime', 'dt_varchar', 'dt_float', 'dt_int', 'dt_blob', name='datatype'), nullable=False),
    sa.Column('regex', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('script_label')
    )
    op.create_table('clients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('master_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('pickle', sa.PickleType(), nullable=False),
    sa.Column('hyper_p', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', name='activity'), server_default='pending', nullable=False),
    sa.Column('train_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('train_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paredown_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_core', sa.Boolean(), server_default='f', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('initials', sa.String(length=8), nullable=False),
    sa.Column('first_name', sa.String(length=128), nullable=False),
    sa.Column('last_name', sa.String(length=128), nullable=False),
    sa.Column('role', sa.Enum('it_admin', 'tax_admin', 'data_admin', 'tax_approver', name='roles'), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('req_pass_reset', sa.Boolean(), server_default='t', nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('initials')
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('vendors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('client_entities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_code', sa.Integer(), nullable=False),
    sa.Column('lob_sector', sa.Enum('business_services_business_services', 'consumer_retail_consumer_goods', 'consumer_retail_food_beverage', 'consumer_retail_retail', 'energy_natural_resources_forestry', 'energy_natural_resources_mining', 'energy_natural_resources_oil_gas_upstream', 'energy_natural_resources_oil_gas_midstream', 'energy_natural_resources_oil_gas_downstream', 'energy_natural_resources_power_utilities', 'financial_services_asset_management', 'financial_services_banking', 'financial_services_insurance', 'financial_services_pensions', 'financial_services_private_equity', 'financial_services_automotive', 'financial_services_chemicals', 'financial_services_industrial_mfg', 'infrastructure_government_healthcare_aerospace_defense', 'infrastructure_government_healthcare_government_services', 'infrastructure_government_healthcare_health_life_science', 'infrastructure_government_healthcare_transport_infrastructure', 'real_estate_building_construct', 'real_estate_devleopers', 'real_estate_hotels_recreation', 'real_estate_invest_operator', 'technology_media_telecommunication_media', 'technology_media_telecommunication_technology', 'technology_media_telecommunication_telecommunications', name='lineofbusinesssectors'), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_id', 'company_code', name='client_company_code_unique_constraint')
    )
    op.create_table('client_models',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('pickle', sa.PickleType(), nullable=False),
    sa.Column('hyper_p', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', 'pending', name='activity'), server_default='pending', nullable=False),
    sa.Column('train_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('train_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('action', sa.Enum('create', 'delete', 'modify', 'approve', name='actions'), nullable=False),
    sa.Column('affected_entity', sa.String(length=256), nullable=False),
    sa.Column('details', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('master_model_performances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('precision', sa.Float(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=False),
    sa.Column('recall', sa.Float(), nullable=False),
    sa.Column('test_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('test_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('master_model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['master_model_id'], ['master_models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('paredown_rule_lob_sector',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lob_sector', sa.Enum('business_services_business_services', 'consumer_retail_consumer_goods', 'consumer_retail_food_beverage', 'consumer_retail_retail', 'energy_natural_resources_forestry', 'energy_natural_resources_mining', 'energy_natural_resources_oil_gas_upstream', 'energy_natural_resources_oil_gas_midstream', 'energy_natural_resources_oil_gas_downstream', 'energy_natural_resources_power_utilities', 'financial_services_asset_management', 'financial_services_banking', 'financial_services_insurance', 'financial_services_pensions', 'financial_services_private_equity', 'financial_services_automotive', 'financial_services_chemicals', 'financial_services_industrial_mfg', 'infrastructure_government_healthcare_aerospace_defense', 'infrastructure_government_healthcare_government_services', 'infrastructure_government_healthcare_health_life_science', 'infrastructure_government_healthcare_transport_infrastructure', 'real_estate_building_construct', 'real_estate_devleopers', 'real_estate_hotels_recreation', 'real_estate_invest_operator', 'technology_media_telecommunication_media', 'technology_media_telecommunication_technology', 'technology_media_telecommunication_telecommunications', name='lineofbusinesssectors'), nullable=False),
    sa.Column('paredown_rule_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['paredown_rule_id'], ['paredown_rules.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('paredown_rule_id', 'lob_sector', name='paredown_rule_lob_sector_unique_constraint')
    )
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('is_paredown_locked', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('is_completed', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('engagement_partner_id', sa.Integer(), nullable=False),
    sa.Column('engagement_manager_id', sa.Integer(), nullable=False),
    sa.Column('has_ts_gst', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_hst', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_qst', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_pst', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_vat', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_mft', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_ct', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_excise', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_customs', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_crown', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_ts_freehold', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_caps', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_taxreturn', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_flowthrough', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_employeeexpense', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_pccards', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_coupons', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_creditnotes', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_edi', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_cars', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_duplpay', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_unapplcredit', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_missedearly', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_otheroverpay', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_firmanalysis', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_brokeranalysis', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_crowngca', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_crownalloc', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_crownincent', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_lornri', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_lorsliding', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_lordeduct', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_lorunder', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_lormissed', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_gstreg', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_cvm', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_taxgl', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_aps', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_ars', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_fxrates', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_trt', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('has_es_daf', sa.Boolean(), server_default='f', nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['engagement_manager_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['engagement_partner_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('client_entity_jurisdictions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jurisdiction', sa.Enum('ab', 'bc', 'mb', 'nb', 'nl', 'nt', 'ns', 'nu', 'on', 'pe', 'qc', 'sk', 'ty', 'foreign', name='jurisdiction'), nullable=False),
    sa.Column('client_entity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_entity_id'], ['client_entities.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('client_entity_id', 'jurisdiction', name='client_entity_jurisdiction_unique_constraint')
    )
    op.create_table('client_model_performances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('precision', sa.Float(), nullable=False),
    sa.Column('accuracy', sa.Float(), nullable=False),
    sa.Column('recall', sa.Float(), nullable=False),
    sa.Column('test_data_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('test_data_end', sa.DateTime(timezone=True), nullable=False),
    sa.Column('client_model_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_model_id'], ['client_models.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('data_mappings',
    sa.Column('column_name', sa.String(length=256), nullable=False),
    sa.Column('table_name', sa.String(length=256), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('cdm_label_script_label', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['cdm_label_script_label'], ['cdm_labels.script_label'], ),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('project_id', 'cdm_label_script_label')
    )
    op.create_table('transactions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_approved', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('is_predicted', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('recovery_probability', sa.Float(), nullable=True),
    sa.Column('rbc_predicted', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('rbc_recovery_probability', sa.Float(), nullable=True),
    sa.Column('image', sa.LargeBinary(), nullable=True),
    sa.Column('data', postgresql.JSON(astext_type=sa.Text()), nullable=False),
    sa.Column('locked_user_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('client_model_id', sa.Integer(), nullable=True),
    sa.Column('master_model_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['client_model_id'], ['client_models.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['locked_user_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['master_model_id'], ['master_models.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_favourite', sa.Boolean(), server_default='f', nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'project_id', name='user_project_unique_constraint')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_project')
    op.drop_table('transactions')
    op.drop_table('data_mappings')
    op.drop_table('client_model_performances')
    op.drop_table('client_entity_jurisdictions')
    op.drop_table('projects')
    op.drop_table('paredown_rule_lob_sector')
    op.drop_table('master_model_performances')
    op.drop_table('logs')
    op.drop_table('client_models')
    op.drop_table('client_entities')
    op.drop_table('vendors')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_table('paredown_rules')
    op.drop_table('master_models')
    op.drop_table('clients')
    op.drop_table('cdm_labels')
    op.drop_table('blacklisted_tokens')
    # ### end Alembic commands ###
